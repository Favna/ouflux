name: Continuous Deployment

'on':
    push:
        branches:
            - main
        paths:
            - src/**
            - .github/**
            - README.md

jobs:
    Linting:
        name: Linting
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        steps:
            - name: Checkout Project
              uses: actions/checkout@v2
            - name: Use Node.js 14
              uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: Restore CI Cache
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: "${{ runner.os }}-14-${{ hashFiles('**/yarn.lock') }}"
            - name: Install Dependencies
              run: yarn --frozen-lockfile
            - name: Run ESLint
              uses: icrawl/action-eslint@v1
    Building:
        name: Compile source code
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        needs: Linting
        steps:
            - name: Checkout Project
              uses: actions/checkout@v2
            - name: Use Node.js 14
              uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: Restore CI Cache
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: "${{ runner.os }}-14-${{ hashFiles('**/yarn.lock') }}"
            - name: Install Dependencies
              run: yarn --frozen-lockfile
            - name: Copy Configuration
              run: |
                  pushd src &&
                  cp config.example.ts config.ts &&
                  popd
            - name: Build Code
              uses: icrawl/action-tsc@v1
              with:
                  build: src
            - name: Upload Microservice bundle to artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: microservice_bundle
                  path: dist/
    Dockerhub:
        name: Publish image to Dockerhub
        runs-on: ubuntu-latest
        if: >-
            !(contains(github.event.head_commit.message, '[skip ci]')
            ||contains(github.event.head_commit.message, '[skip docker]'))
        needs: Building
        steps:
            - name: Checkout Project
              uses: actions/checkout@v2
            - name: Download build bundle artifact
              uses: actions/download-artifact@v2
              with:
                  name: microservice_bundle
                  path: dist/
            - name: Publish to Dockerhub
              uses: elgohr/Publish-Docker-Github-Action@master
              with:
                  name: skyrabot/outflux
                  username: '${{ secrets.DOCKER_USERNAME }}'
                  password: '${{ secrets.DOCKER_PASSWORD }}'
                  tags: 'latest,stable,master'
    Github-Package-Registry-Docker:
        name: Publish image to Github Package Registry
        runs-on: ubuntu-latest
        if: >-
            !(contains(github.event.head_commit.message, '[skip ci]')
            ||contains(github.event.head_commit.message, '[skip docker]'))
        needs: Building
        steps:
            - name: Checkout Project
              uses: actions/checkout@v2
            - name: Download build bundle artifact
              uses: actions/download-artifact@v2
              with:
                  name: microservice_bundle
                  path: dist/
            - name: Publish to Github Package Registry
              uses: elgohr/Publish-Docker-Github-Action@master
              with:
                  name: skyra-project/outflux/outflux
                  username: NM-EEA-Y
                  password: '${{ secrets.SKYRA_TOKEN }}'
                  tags: 'latest,stable,master'
                  registry: docker.pkg.github.com
